/*var a[4][4]:int;
var b[4]:int;
var c[4]:int;
var x:int;
var L:intlist;
var M:intlist;
data intlist = #NIL
			 | #CONS of int * intlist
			 | #TEST of int * int * int;
fun f(y[]:int):int
{
	return y[0];
};
begin
{
	fun h(y:int):int
	{
		return y;
	};
	x := h(x);
};
x := f(c);
end
*/
var xs:int;
%var y[1][1]:int;
var a[1]:int;
var b[1][1]:int;
var c[1][1][1]:int;
var L:intlist;
var t:intlist;
data intlist = #NIL
			 | #CONS of int * intlist * int;
fun f(y[]:int):int
{
	%var x:int;
	var zz:int;
	var a[xs]:int;
	return f(a);
};
fun g(y[]:int):int
{
	%var x:int;
	return 6;
};
fun h(n[]:int):int
{
	var ttvar2:tt;
	var test[n[1]]:int;
	data tt = #TEST of int;
	var ttvar:tt;
	ttvar := #TEST(1);
	return n[0];
};
begin
%x := f(y);
case t of { #NIL => L := #NIL
		  | #CONS(x,xs,y) => L := xs };
%while xs>xs do
%{
%	t := #NIL;
%};
end


% M_expr = M_id t
% cons[0] = (String,[String],M_stmt) = ("#NIL",[],M_ass ("L",[],M_app (M_cid "#NIL",[])))
% cons[1] = (String,[String],M_stmt) = ("#CONS",["x","xs"],M_ass ("L",[],M_id ("xs",[])))
